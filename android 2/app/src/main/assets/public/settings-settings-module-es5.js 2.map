{"version":3,"sources":["./src/app/settings/settings.page.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,qqBAAqqB,2BAA2B,kuB;;;;;;;;;;;;;;;;;;;ACAvpB;AACc;AAER;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QAJrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AAW/C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kFAAyB;aAC1B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACnB/B,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AACD;AAEoB;AAOrE;IAIE,sBAAmB,WAA+B,EAAS,eAAgC;QAAxE,gBAAW,GAAX,WAAW,CAAoB;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAC3F,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACf,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;IAC3C,CAAC;IAEG,+BAAQ,GAAd;;;;;;4BACkB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,WAAW;4BACnB,MAAM,EAAE;gCACN;oCACE,IAAI,EAAE,MAAM;oCACZ,IAAI,EAAE,MAAM;oCACZ,WAAW,EAAE,gBAAgB;oCAC7B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;iCACpC;6BACF;4BACD,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,QAAQ;oCACd,OAAO,EAAE;oCACT,CAAC;iCACF,EAAE;oCACD,IAAI,EAAE,KAAK;oCACX,OAAO,EAAE,cAAI;wCACX,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCACzC,CAAC;iCACF;6BACF;yBACF,CAAC;;wBAvBI,KAAK,GAAG,SAuBZ;wBACA,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;;gBArC6B,gFAAkB;gBAA0B,8DAAe;;IAJhF,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gJAAmC;;SAEpC,CAAC;+EAKgC,gFAAkB,EAA0B,8DAAe;OAJhF,YAAY,CA2CxB;IAAD,mBAAC;CAAA;AA3CwB","file":"settings-settings-module-es5.js","sourcesContent":["module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"content\\\">  \\n  <ion-list>\\n    <ion-item-group>\\n      <ion-item-divider>\\n        <ion-icon slot=\\\"start\\\" name=\\\"hammer\\\"></ion-icon>\\n        <ion-label>Journal Name</ion-label>\\n      </ion-item-divider>\\n    <ion-item>\\n      <ion-textarea type=\\\"text\\\" [(ngModel)]=\\\"prefService.journalname\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item (click)=\\\"editName()\\\">\\n      <ion-label>{{ prefService.journalname }}</ion-label>\\n    </ion-item>\\n  </ion-item-group>\\n\\n  <ion-item-group>\\n<ion-item-divider>\\n  <ion-icon slot=\\\"start\\\" name=\\\"notifications\\\"></ion-icon>\\n  <ion-label>\\n    Notifications\\n  </ion-label>\\n</ion-item-divider>\\n\\n  <ion-item>\\n    \\n    <ion-label>Daily Reminder</ion-label>\\n    <ion-toggle slot=\\\"end\\\" (ionChange)=\\\"prefService.toggleChanged($event)\\\" [(ngModel)]=\\\"prefService.isActive\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item *ngIf=\\\"prefService.isActive\\\"> \\n    <ion-label>Time</ion-label>\\n    <ion-datetime displayFormat=\\\"HH:mm\\\" (ionChange)=\\\"prefService.timeChanged($event)\\\" [(ngModel)]=\\\"prefService.sceduledTime\\\"></ion-datetime>\\n  </ion-item>\\n</ion-item-group>\\n</ion-list>\\n</div>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\nimport { PreferencesService } from '../services/preferences.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  public name;\n\n  constructor(public prefService: PreferencesService, public alertController: AlertController) { \n  this.name = '';\n  }\n\n  ngOnInit() {\n    this.prefService.loadName();\n    console.log(this.prefService.journalname);\n\n    this.name = this.prefService.journalname;\n  }\n\nasync editName() {\n    const alert = await this.alertController.create({\n      header: 'Edit name',\n      inputs: [\n        {\n          name: 'name',\n          type: 'text',\n          placeholder: 'Enter sth here',\n          value: this.prefService.journalname\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n          }\n        }, {\n          text: 'Add',\n          handler: data => {\n            this.prefService.changeName(data.name);\n          }\n        }\n      ]\n    })\n      await alert.present();\n    }\n\n}\n"],"sourceRoot":""}