{"version":3,"sources":["./src/app/list-tab/list-tab.page.html","./src/app/list-tab/list-tab-routing.module.ts","./src/app/list-tab/list-tab.module.ts","./src/app/list-tab/list-tab.page.scss","./src/app/list-tab/list-tab.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+TAA+T,2BAA2B,+CAA+C,kBAAkB,qBAAqB,sSAAsS,eAAe,2XAA2X,iBAAiB,mDAAmD,+CAA+C,6E;;;;;;;;;;;;;;;;;;;ACA1qC;AACc;AAET;AAE9C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0DAAW;KACvB;CACF,CAAC;AAMF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAJpC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AACE;AAEF;AAEwB;AAEvB;AACqB;AAanE;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAX7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,iFAAwB;gBACxB,8EAAkB;gBAClB,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0DAAW,EAAE,CAAC,CAAC;aAC9D;YACD,YAAY,EAAE,CAAC,0DAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACvB9B,2BAA2B,eAAe,cAAc,GAAG,cAAc,eAAe,mBAAmB,GAAG,6CAA6C,2oB;;;;;;;;;;;;;;;;;;;;;ACAzG;AACJ;AACe;AACF;AACV;AACoB;AAQrE;IAOE,qBAAmB,eAAgC,EAAS,cAA8B,EAAU,OAAsB,EAAS,WAA+B;QAA/I,oBAAe,GAAf,eAAe,CAAiB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAL3J,YAAO,GAAG;YACf,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,OAAO;SACb;IAGH,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAEK,8BAAQ,GAAd;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,SAAS,EAAE,sEAAY;yBACxB,CAAC;;wBAFI,KAAK,GAAG,SAEZ;wBACK,qBAAM,KAAK,CAAC,OAAO,EAAE;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAC9B;;gBAZmC,8DAAe;gBAAyB,wEAAc;gBAAmB,4DAAa;gBAAsB,gFAAkB;;IAPvJ,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gJAAmC;;SAEpC,CAAC;+EAQoC,8DAAe,EAAyB,wEAAc,EAAmB,4DAAa,EAAsB,gFAAkB;OAPvJ,WAAW,CAoBvB;IAAD,kBAAC;CAAA;AApBuB","file":"list-tab-list-tab-module-es5.js","sourcesContent":["module.exports = \"<ion-header no-border >\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"newEntry()\\\" color=\\\"dark\\\" >\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<div class=\\\"content\\\">\\n  <h1>{{ prefService.journalname }}</h1>\\n  <ion-card style=\\\"border-radius: 15px; box-shadow: none; margin-bottom: 15px;\\\" button color=\\\"light\\\" *ngFor=\\\"let entry of entriesService.entries\\\" [routerLink]=\\\"'/tabs/entries/detail/' + entry.id\\\" routerDirection=\\\"forward\\\">\\n    <ion-card-header >\\n      <ion-card-title>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n              {{ entry.title }}\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-end\\\">\\n              <ion-icon *ngIf=\\\"entry.isFavorite\\\" name=\\\"heart\\\" size=\\\"small\\\" color=\\\"danger\\\"></ion-icon>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-text class=\\\"ion-text-nowrap\\\">\\n      <p> {{ entry.content }}</p>\\n    </ion-text>\\n      <div class=\\\"meta\\\">{{ entriesService.getDate(entry.date, options) }}</div>\\n     </ion-card-content>\\n  </ion-card>\\n\\n</div>\\n</ion-content >\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListTabPage } from './list-tab.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListTabPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListTabPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListTabPageRoutingModule } from './list-tab-routing.module';\n\nimport { ListTabPage } from './list-tab.page';\nimport { AddEntryPageModule } from '../add-entry/add-entry.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListTabPageRoutingModule,\n    AddEntryPageModule,\n    RouterModule.forChild([{ path: '', component: ListTabPage }])\n  ],\n  declarations: [ListTabPage]\n})\nexport class ListTabPageModule {}\n","module.exports = \"ion-col {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\nion-grid {\\n  padding: 0;\\n  margin: 10 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9saXNhL0Rlc2t0b3Avam91cm5hbC1hcHAvc3JjL2FwcC9saXN0LXRhYi9saXN0LXRhYi5wYWdlLnNjc3MiLCJzcmMvYXBwL2xpc3QtdGFiL2xpc3QtdGFiLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFVBQUE7RUFDQSxTQUFBO0FDQUo7O0FERUE7RUFDSSxVQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbGlzdC10YWIvbGlzdC10YWIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pb24tY29se1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xufVxuaW9uLWdyaWR7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDEwIDBweDtcbn1cbiIsImlvbi1jb2wge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmlvbi1ncmlkIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAxMCAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController} from '@ionic/angular';\nimport { EntriesService } from '../services/entries.service';\nimport { AddEntryPage } from '../add-entry/add-entry.page';\nimport { ModalController } from '@ionic/angular';\nimport { PreferencesService } from '../services/preferences.service';\n\n\n@Component({\n  selector: 'app-list-tab',\n  templateUrl: './list-tab.page.html',\n  styleUrls: ['./list-tab.page.scss'],\n})\nexport class ListTabPage implements OnInit {\n\n  public options = {\n    day: 'numeric',\n    month: 'short'\n    }\n\n  constructor(public modalController: ModalController, public entriesService: EntriesService, private navCtrl: NavController, public prefService: PreferencesService){ \n  }\n\n  ngOnInit() {\n    this.entriesService.load();    \n  }\n\n  async newEntry(){\n    const modal = await this.modalController.create({\n      component: AddEntryPage\n    });\n    return await modal.present();\n  }\n}\n"],"sourceRoot":""}